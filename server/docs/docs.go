// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/ksf/records/map/{mapname}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ksf"
                ],
                "summary": "get all records for map by map name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "map name e.g. surf_summit",
                        "name": "mapname",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.RecordKsf"
                            }
                        }
                    }
                }
            }
        },
        "/sh/records/bonus/{mapname}/": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "surfheaven"
                ],
                "summary": "get all records for all bonuses",
                "parameters": [
                    {
                        "type": "string",
                        "description": "map name e.g. surf_summit",
                        "name": "mapname",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.RecordSh"
                            }
                        }
                    }
                }
            }
        },
        "/sh/records/bonus/{mapname}/{bonus}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "surfheaven"
                ],
                "summary": "get all records for specific bonus",
                "parameters": [
                    {
                        "type": "string",
                        "description": "map name e.g. surf_summit",
                        "name": "mapname",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "bonus e.g. 1, 2, ...",
                        "name": "bonus",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.RecordSh"
                            }
                        }
                    }
                }
            }
        },
        "/sh/records/map/{mapname}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "surfheaven"
                ],
                "summary": "get all records for map by map name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "map name e.g. surf_summit",
                        "name": "mapname",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.RecordSh"
                            }
                        }
                    }
                }
            }
        },
        "/sh/records/stage/{mapname}/": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "surfheaven"
                ],
                "summary": "get all records for all stages",
                "parameters": [
                    {
                        "type": "string",
                        "description": "map name e.g. surf_summit",
                        "name": "mapname",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.RecordSh"
                            }
                        }
                    }
                }
            }
        },
        "/sh/records/stage/{mapname}/{stage}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "surfheaven"
                ],
                "summary": "get all records for specific stage",
                "parameters": [
                    {
                        "type": "string",
                        "description": "map name e.g. surf_summit",
                        "name": "mapname",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "stage e.g. 1, 2, ...",
                        "name": "stage",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ent.RecordSh"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ent.RecordKsf": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "ID of the ent.",
                    "type": "string"
                },
                "improvement": {
                    "description": "Improvement holds the value of the \"improvement\" field.",
                    "type": "string"
                },
                "map_name": {
                    "description": "MapName holds the value of the \"map_name\" field.",
                    "type": "string"
                },
                "player_name": {
                    "description": "PlayerName holds the value of the \"player_name\" field.",
                    "type": "string"
                },
                "server": {
                    "description": "Server holds the value of the \"server\" field.",
                    "type": "string"
                },
                "time": {
                    "description": "Time holds the value of the \"time\" field.",
                    "type": "string"
                },
                "timestamp": {
                    "description": "Timestamp holds the value of the \"timestamp\" field.",
                    "type": "string"
                }
            }
        },
        "ent.RecordSh": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "ID of the ent.",
                    "type": "string"
                },
                "improvement": {
                    "description": "Improvement holds the value of the \"improvement\" field.",
                    "type": "string"
                },
                "map_name": {
                    "description": "MapName holds the value of the \"map_name\" field.",
                    "type": "string"
                },
                "player_id": {
                    "description": "PlayerID holds the value of the \"player_id\" field.",
                    "type": "string"
                },
                "player_name": {
                    "description": "PlayerName holds the value of the \"player_name\" field.",
                    "type": "string"
                },
                "server": {
                    "description": "Server holds the value of the \"server\" field.",
                    "type": "string"
                },
                "time": {
                    "description": "Time holds the value of the \"time\" field.",
                    "type": "string"
                },
                "timestamp": {
                    "description": "Timestamp holds the value of the \"timestamp\" field.",
                    "type": "string"
                },
                "track": {
                    "description": "Track holds the value of the \"track\" field.",
                    "type": "integer"
                },
                "type": {
                    "description": "Type holds the value of the \"type\" field.",
                    "type": "string"
                }
            }
        }
    },
    "tags": [
        {
            "description": "surfheaven.eu CS:GO surf servers",
            "name": "surfheaven"
        },
        {
            "description": "KSF CS:S surf servers",
            "name": "ksf"
        }
    ]
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Surf DB API",
	Description:      "CS:GO & CS:S surf record and map data. Github: https://github.com/surf0/surf-db",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
